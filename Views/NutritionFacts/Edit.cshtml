@model Renipe.Models.Meal

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Nutrition Facts</h4>
<p>Values per serving</p>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" onload="UpdateValues(@Model.Servings)">
            <input type="hidden" asp-for="MealId" value="@Model.MealId" />
            <dl class="row">
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.FoodName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.FoodName)
                    <input asp-for="FoodName" type="hidden" />
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.CaloriesPerServing)
                </dt>
                <dd class="col-sm-10" id="calories">
                    @Html.DisplayFor(model => model.CaloriesPerServing)
                </dd>
                    <input asp-for="CaloriesPerServing" type="hidden" />
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.CarbohydratesPerServing)
                </dt>
                <dd class="col-sm-10" id="carbohydrates">
                    @Html.DisplayFor(model => model.CarbohydratesPerServing)
                </dd>
                    <input asp-for="CarbohydratesPerServing" type="hidden" />
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.ProteinPerServing)
                </dt>
                <dd class="col-sm-10" id="protein">
                    @Html.DisplayFor(model => model.ProteinPerServing)
                </dd>
                    <input asp-for="ProteinPerServing" type="hidden" />
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.FatPerServing)
                </dt>
                <dd class="col-sm-10" id="fat">
                    @Html.DisplayFor(model => model.FatPerServing)
                </dd>
                    <input asp-for="FatPerServing" type="hidden" />
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.PhosphorusPerServing)
                </dt>
                <dd class="col-sm-10" id="phosphorus">
                    @Html.DisplayFor(model => model.PhosphorusPerServing)
                </dd>
                    <input asp-for="PhosphorusPerServing" type="hidden" />
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.PotassiumPerServing)
                </dt>
                <dd class="col-sm-10" id="potassium">
                    @Html.DisplayFor(model => model.PotassiumPerServing)
                </dd>
                    <input asp-for="PotassiumPerServing" type="hidden" />
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.SodiumPerServing)
                </dt>
                <dd class="col-sm-10" id="sodium">
                    @Html.DisplayFor(model => model.SodiumPerServing)
                </dd>
                    <input asp-for="SodiumPerServing" type="hidden" />
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Servings)
                </dt>
                <dd class="col-sm-10">
                    <input asp-for="Servings" type="range" min=".25" max="5" step=".25" oninput='ServingsSlider()' /> <label id="slider-value">@Html.DisplayFor(model => model.Servings)</label>
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Date)
                </dt>
                <dd class="col-sm-10">
                    @Html.EditorFor(model => model.Date)
                </dd>
                <dt class="col-sm-3">
            </dl>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    const ServingsSlider = () => {
        let val = event.target.value;
        UpdateValues(val)
    }
    const UpdateValues = (val) =>{
        let element = document.getElementById("slider-value");
        element.textContent = val
        element = document.getElementById("calories")
        element.textContent = @Model.CaloriesPerServing * val
        element = document.getElementById("carbohydrates")
        element.textContent = @Model.CarbohydratesPerServing * val
        element = document.getElementById("protein")
        element.textContent = @Model.ProteinPerServing * val
        element = document.getElementById("fat")
        element.textContent = @Model.FatPerServing * val;
        element = document.getElementById("phosphorus")
        element.textContent = @Model.PhosphorusPerServing *val;
        element = document.getElementById("potassium")
        element.textContent = @Model.PotassiumPerServing * val
        element = document.getElementById("sodium")
        element.textContent = @Model.SodiumPerServing * val
    }
    window.onload = UpdateValues(@Model.Servings)
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
